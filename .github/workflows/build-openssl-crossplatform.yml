name: Cross-Platform OpenSSL C Build

on: push

env:
  QEMU_IMAGE: tonistiigi/binfmt:qemu-v5.0.1
  VERSION_SUFFIX: ''
  REGISTRY: ghcr.io
  IMAGE_NAME: openssl4j/openssl

jobs:
  #
  # show the available qemu platforms to have a list of all platforms
  #
  qemu_show_platform_info:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Set up QEMU for all platforms
        id: qemu
        uses: docker/setup-qemu-action@v3
        with:
          image: ${{ env.QEMU_IMAGE }}
          platforms: all
      -
        name: Available platforms
        run: echo ${{ steps.qemu.outputs.platforms }}

  #
  # build the different platforms using QEMU
  #
  qemu_platform_object_files:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        include:
          - platform: linux/amd64
            artifact: linux_amd64
          - platform: linux/arm64
            artifact: linux_arm64
          - platform: linux/s390x
            artifact: linux_s390x
          - platform: linux/arm/v7
            artifact: linux_arm_v7
          - platform: linux/arm/v6
          - platform: linux/ppc64le
            artifact: linux_ppc64le
          #- platform: linux/riscv64
          #- platform: linux/386
          #- platform: linux/mips64le
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Set up QEMU for ${{ matrix.platform }}
        id: qemu
        uses: docker/setup-qemu-action@v3
        with:
          image: ${{ env.QEMU_IMAGE }}
          platforms: ${{ matrix.platform }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      -
        name: Log in to the Container registry ${{ env.REGISTRY }} as ${{ github.actor }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      -
        name: Build on ${{ matrix.platform }}
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile-openssl
          push: ${{ github.event_name != 'pull_request' }}
          platforms: ${{ matrix.platform }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
